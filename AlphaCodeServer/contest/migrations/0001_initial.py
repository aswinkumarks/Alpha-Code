# Generated by Django 3.2.9 on 2021-11-19 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('cId', models.AutoField(primary_key=True, serialize=False)),
                ('cname', models.CharField(max_length=50, unique=True)),
                ('desc', models.TextField(blank=True)),
                ('hosted_by', models.CharField(default='', max_length=150)),
                ('duration', models.IntegerField(default=0)),
                ('startTime', models.DateTimeField()),
                ('endTime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('rank', models.IntegerField(default=9999999)),
                ('submition_time', models.DateTimeField(blank=True, null=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.contest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qno', models.IntegerField()),
                ('qtype', models.CharField(choices=[('MCQ', 'Multiple Choice Question'), ('Coding', 'Coding Question')], max_length=50)),
                ('question', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('score', models.IntegerField(default=0)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.contest')),
            ],
            options={
                'ordering': ['qno'],
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testCaseType', models.CharField(choices=[('Hidden', 'Output and Input will be hidden from user'), ('Visible', 'Output and Input will be shown to user')], max_length=30)),
                ('pgmInput', models.TextField(default='')),
                ('OutputType', models.CharField(choices=[('Static', 'Program output will be same for the given input'), ('Dynamic', 'Program output will be different for the given input')], max_length=30)),
                ('pgmOutputOrEvalCode', models.TextField()),
                ('score', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testcases', to='contest.question')),
            ],
        ),
        migrations.CreateModel(
            name='TempCodeCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qno', models.IntegerField()),
                ('language', models.CharField(choices=[('Python', 'Python pgm'), ('C++', 'C++ pgm'), ('C', 'C Program')], max_length=50)),
                ('answer', models.TextField()),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qno', models.IntegerField()),
                ('language', models.CharField(choices=[('Python', 'Python pgm'), ('C++', 'C++ pgm'), ('C', 'C Program')], max_length=50)),
                ('user_answer', models.TextField()),
                ('score', models.IntegerField(default=0)),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=250)),
                ('correct_option', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='contest.question')),
            ],
        ),
        migrations.CreateModel(
            name='ContestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('contest_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.contest', to_field='cname')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.participant')),
            ],
        ),
        migrations.AddConstraint(
            model_name='tempcodecache',
            constraint=models.UniqueConstraint(fields=('participant', 'qno', 'language'), name='Unique answer cache for participant'),
        ),
        migrations.AddConstraint(
            model_name='submission',
            constraint=models.UniqueConstraint(fields=('participant', 'qno'), name='Unique qno for participant'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('contest', 'qno')},
        ),
        migrations.AddConstraint(
            model_name='participant',
            constraint=models.UniqueConstraint(fields=('user', 'contest'), name='Unique user for contest'),
        ),
        migrations.AlterUniqueTogether(
            name='contestresult',
            unique_together={('contest_name', 'rank')},
        ),
    ]
